<xs:schema xmlns:tns="http://tcss559.net/" xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://tcss559.net/" version="1.0">
  <xs:element name="addHelper" type="tns:addHelper"/>
  <xs:element name="addHelperResponse" type="tns:addHelperResponse"/>
  <xs:element name="addStudent" type="tns:addStudent"/>
  <xs:element name="addStudentResponse" type="tns:addStudentResponse"/>
  <xs:element name="enrollHelper" type="tns:enrollHelper"/>
  <xs:element name="enrollHelperResponse" type="tns:enrollHelperResponse"/>
  <xs:element name="enrollStudent" type="tns:enrollStudent"/>
  <xs:element name="enrollStudentResponse" type="tns:enrollStudentResponse"/>
  <xs:element name="helperUpdate" type="tns:helperUpdate"/>
  <xs:element name="helperUpdateResponse" type="tns:helperUpdateResponse"/>
  <xs:element name="initialize" type="tns:initialize"/>
  <xs:element name="initializeResponse" type="tns:initializeResponse"/>
  <xs:element name="remStudentByID" type="tns:remStudentByID"/>
  <xs:element name="remStudentByIDResponse" type="tns:remStudentByIDResponse"/>
  <xs:element name="removeStudent" type="tns:removeStudent"/>
  <xs:element name="removeStudentResponse" type="tns:removeStudentResponse"/>
  <xs:element name="searchStudent" type="tns:searchStudent"/>
  <xs:element name="searchStudentResponse" type="tns:searchStudentResponse"/>
  <xs:element name="updateStudent" type="tns:updateStudent"/>
  <xs:element name="updateStudentResponse" type="tns:updateStudentResponse"/>
  <xs:complexType name="searchStudent">
    <xs:sequence>
      <xs:element name="arg0" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="searchStudentResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updateStudent">
    <xs:sequence>
      <xs:element name="arg0" type="xs:int"/>
      <xs:element name="arg1" type="xs:int"/>
      <xs:element name="arg2" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="updateStudentResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:student"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="student">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="removeStudent">
    <xs:sequence>
      <xs:element name="arg0" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="removeStudentResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addStudent">
    <xs:sequence>
      <xs:element minOccurs="0" name="arg0" type="xs:string"/>
      <xs:element name="arg1" type="xs:int"/>
      <xs:element name="arg2" type="xs:int"/>
      <xs:element name="arg3" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addStudentResponse">
    <xs:sequence>
      <xs:element name="_return">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="entry">
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" name="key" type="xs:int"/>
                  <xs:element minOccurs="0" name="value" type="tns:student"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="helperUpdate">
    <xs:sequence>
      <xs:element name="arg0" type="xs:int"/>
      <xs:element name="arg1" type="xs:int"/>
      <xs:element name="arg2" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="helperUpdateResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="remStudentByID">
    <xs:sequence>
      <xs:element name="arg0" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="remStudentByIDResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="addHelper">
    <xs:sequence>
      <xs:element minOccurs="0" name="arg0" type="xs:string"/>
      <xs:element name="arg1" type="xs:int"/>
      <xs:element name="arg2" type="xs:int"/>
      <xs:element name="arg3" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="addHelperResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="enrollHelper">
    <xs:sequence>
      <xs:element minOccurs="0" name="arg0" type="xs:string"/>
      <xs:element name="arg1" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="enrollHelperResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="enrollStudent">
    <xs:sequence>
      <xs:element minOccurs="0" name="arg0" type="xs:string"/>
      <xs:element name="arg1" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="enrollStudentResponse">
    <xs:sequence>
      <xs:element name="_return">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="entry">
              <xs:complexType>
                <xs:sequence>
                  <xs:element minOccurs="0" name="key" type="xs:int"/>
                  <xs:element minOccurs="0" name="value" type="tns:student"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="initialize">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="initializeResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:element name="SAXException" type="tns:SAXException"/>
  <xs:complexType name="SAXException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="IOException" type="tns:IOException"/>
  <xs:complexType name="IOException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ParserConfigurationException" type="tns:ParserConfigurationException"/>
  <xs:complexType name="ParserConfigurationException">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>
